<?xml version="1.0" ?>
<gprconfig>
<!-- Since we're building this compiler ourselves, we know exactly
     what it contains. -->
  <compiler_description>
    
    <name>STAFFANO_MINGW</name>

    <!-- We know it has to contain the gnatls executable -->
    <executable prefix="1">(x86_64-w64-mingw32-)gnatls</executable>
    
    <version>
      <external>${PREFIX}gnatls -v --version</external>
      <grep regexp="^GNATLS.+?(\d+(\.\d+)?)" group="1"></grep>
    </version>

    <languages>Ada,C,C++,Asm,WinRes</languages>
    
    <variable name="gcc_version">
      <external>${PREFIX}gcc -v</external>
      <grep regexp="^[-\w]*gcc \S+ (\S+)" group="1"></grep>
    </variable>
    
    <runtimes default="default">
       <directory group="default" >\.\./lib/gcc/$TARGET/$gcc_version/adalib/</directory>
    </runtimes>
    
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>

  </compiler_description>

  <configuration>
   <compilers>
       <compiler name="^STAFFANO_MINGW$"/>
   </compilers>
   <config>
   package Compiler is

      for Max_Command_Line_Length use "8192";      
      for Library_Encapsulated_Supported use "true";

      for Driver                    ("Ada") use "${PATH(ada)}${PREFIX(ada)}gcc";
      for Language_Kind             ("Ada") use "unit_based";
      for Dependency_Kind           ("Ada") use "ALI_File";
      for Leading_Required_Switches ("Ada") use ("-c", "-x", "ada", "-gnatA")
             &amp; Compiler'Leading_Required_Switches ("Ada");
      for Mapping_File_Switches     ("Ada") use ("-gnatem=");
      for Mapping_Spec_Suffix       ("Ada") use "%s";
      for Mapping_Body_Suffix       ("Ada") use "%b";
      for Config_File_Switches      ("Ada") use ("-gnatec=");
      for Include_Path_File         ("Ada") use "ADA_PRJ_INCLUDE_FILE";


      for Driver                    ("Asm") use "${PATH(asm)}${PREFIX(asm)}gcc";
      for Leading_Required_Switches ("Asm") use
         Compiler'Leading_Required_Switches ("Asm") &amp;
         ("-c", "-x", "assembler-with-cpp");
      for Include_Switches          ("Asm") use ("-I");
      for Response_File_Format      ("Asm") use "GCC_GNU";
      for Dependency_Switches       ("Asm") use ("-MMD", "-MF", "");
  
      for Driver                    ("C") use "${PATH(c)}${PREFIX(c)}gcc";
      for Leading_Required_Switches ("C") use Compiler'Leading_Required_Switches ("C") &amp; ("-c", "-x", "c");
      for Include_Switches          ("C") use ("-I");
      for Response_File_Format      ("C") use "GCC_GNU";
      for Dependency_Switches       ("C") use ("-MMD", "-MF", "");
      
      for Driver                    ("C++") use "${PATH(c++)}${PREFIX(c++)}g++";
      for Leading_Required_Switches ("C++") use Compiler'Leading_Required_Switches  &amp; ("C++")("-c", "-x", "c++");
      for Dependency_Switches       ("C++") use ("-MMD", "-MF", "");
      for Include_Switches_Via_Spec ("C++") use ("cc1plus", "-I");
      for Response_File_Format      ("C++") use "GCC_GNU";
      
      
      for Driver                    ("WinRes") use "x86_64-w64-mingw32-windres";
      for Leading_Required_Switches ("WinRes") use ("-i");
      for Object_File_Suffix        ("WinRes") use ".coff";
      for Object_File_Switches      ("WinRes") use ("-o", "");
   end Compiler;

   package Binder is
      for Objects_Path_File     ("Ada") use "ADA_PRJ_OBJECTS_FILE";

      for Required_Switches ("Ada") use
          Binder'Required_Switches ("Ada") &amp;
          ("gnatbind_prefix=${PREFIX(ada)}");

      for Driver         ("Ada") use
          "${GPRCONFIG_PREFIX}libexec/gprbuild/gprbind";
   end Binder;

   for Toolchain_Version ("Ada") use "GNAT ${VERSION(ada)}";
   for Runtime_Dir       ("Ada") use "${RUNTIME_DIR(ada)}";
   
   </config>
  </configuration>
  
 <configuration>
    <targets>
      <target name="^x86_64-w64-mingw32$" />
    </targets>
    <config>
   for Archive_Builder  use ("x86_64-w64-mingw32-ar", "cr");
   for Archive_Builder_Append_Option use ("q");
   for Archive_Indexer  use ("x86_64-w64-mingw32-ranlib");
   for Archive_Suffix   use ".a";

   for Object_Lister use ("x86_64-w64-mingw32-nm", "-g", "--no-demangle");
   for Object_Lister_Matcher use " [TDRB] (.*)";
   for Library_Partial_Linker use
      ("${PATH(ada)}${PREFIX(ada)}gcc", "-nostdlib", "-Wl,-r", "-o");
   package Linker is
      for Export_File_Format use "GNU";
      for Export_File_Switch use "-Wl,--version-script=";
   end Linker;
    </config>
  </configuration>

  <targetset canonical="x86_64-w64-mingw32">
    <target>x86_64-w64-mingw32</target>
  </targetset>

</gprconfig>